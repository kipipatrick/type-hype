{"version":3,"sources":["components/login/loginServices.js","components/login/loginActions.js","components/login/loginForm.js","components/login/login.js","components/game/gameServices.js","components/game/gameActions.js","components/game/typeTest.js","components/game/game.js","components/login/loginReducer.js","components/game/gameReducers.js","rootReducer.js","store.js","App.js","serviceWorker.js","index.js"],"names":["knownUsers","name","email","password","currentScore","LoginServices","user","filter","sessionStorage","setItem","JSON","stringify","Error","console","log","LoginActionsTypes","login","history","dispatch","push","type","payload","error","message","LoginForm","useDispatch","useHistory","Form","useForm","form","useState","forceUpdate","useEffect","layout","onFinish","values","username","Item","rules","required","prefix","UserOutlined","className","placeholder","LockOutlined","shouldUpdate","htmlType","disabled","isFieldsTouched","getFieldsError","errors","length","Content","Layout","Login","props","process","style","backgroundColor","width","height","backgroundSize","backgroundOrigin","display","overflow","backgroundImage","margin","backgroundRepeat","marginLeft","color","fontSize","lineHeight","justifyContent","marginTop","fontWeight","marginBottom","URL","GameServices","axios","get","text","data","Math","floor","random","value","parse","getItem","post","id","Date","getTime","score","saveStore","scores","item","GameActionsTypes","getText","a","saveScore","getScores","TypingTest","useSelector","state","game","shallowEqual","React","input","setInput","seconds","setSeconds","timeUp","setTimeUp","isActive","setIsActive","showResults","setShowResults","textArray","split","inputArray","compareArray","map","itm","idx","getCorrectText","correct","interval","setInterval","clearInterval","title","visible","onOk","okText","gutter","span","round","valueStyle","itemLayout","dataSource","rate","description","minLimit","maxLimit","renderItem","Meta","avatar","padding","key","index","replace","TextArea","onClick","onChange","e","setText","target","multiple","rows","strokeColor","percent","toFixed","Game","showTest","setShowTest","minHeight","sort","b","slice","moment","format","size","removeItem","logout","float","background","handleActions","action","loading","combineReducers","auth","loginReducers","gameReducers","createHistory","App","store","createStore","reducers","initialState","compose","applyMiddleware","thunk","routerMiddleware","window","devToolsExtension","f","basename","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.edb7cccc.chunk.js","sourcesContent":["const knownUsers = [\n    {\n        name: 'Rain Sindayen',\n        email: 'rain@sindayen.com',\n        password: 'P@ssw0rd123!',\n        currentScore: 110\n    },\n    {\n        name: 'Kipi Patrick',\n        email: 'kipi@patrick.com',\n        password: 'P@ssw0rd123!',\n        currentScore:115\n    }\n]\n\n\nclass LoginServices {\n   static login(email, password){\n      let user = knownUsers.filter(user => user['email'] === email)\n      if(user[0]){\n        if(user[0]['password']=== password){\n            sessionStorage.setItem('CURRENT_USER', JSON.stringify(user[0]))\n            return user[0]\n        } else {\n            throw new Error('Username or Password may be incorrect. Please try again.') \n        }\n      } else {\n        console.log('error')\n        throw new Error('User Not Found')\n      }\n    }\n}\n\nexport default LoginServices","\nimport LoginServices from './loginServices';\n\n\nexport const LoginActionsTypes = {\n    LOGIN_REQUEST: '@@LOGIN_REQUEST',\n    LOGIN_SUCCESS: '@@LOGIN_SUCCESS',\n    LOGIN_FAILED: '@@LOGIN_FAILED',\n}\n\n\n\nexport const login =(email,password, history)=>{\n\n        return (dispatch)=>{\n        \n            try {\n       \n                console.log(email,password )\n            //  dispatch(LoginActionsTypes.LOGIN_REQUEST)\n                let user = LoginServices.login(email, password)\n                if(user){\n              history.push('/game')\n                }\n              dispatch({type: LoginActionsTypes.LOGIN_SUCCESS, payload: user})\n            } catch (error) {\n                console.log(error.message)\n                // dispatch(LoginActionsTypes.LOGIN_FAILED)\n            } \n        }\n    }\n\n    export const logout =(history)=>{\n\n        return (dispatch)=>{\n        \n            try {\n              sessionStorage.removeItem('CURRENT_USER')\n              history.push('/')\n            } catch (error) {\n                console.log(error.message)\n                // dispatch(LoginActionsTypes.LOGIN_FAILED)\n            } \n        }\n    }\n\n\n\nexport default {login}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport {login} from './loginActions';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\n\n\nconst LoginForm = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const [form] = Form.useForm();\n  const [, forceUpdate] = useState(); // To disable submit button at the beginning.\n\n  useEffect(() => {\n    forceUpdate({});\n  }, []);\n\n  const onFinish = values => {\ndispatch(login(values.username, values.password, history))\n\n  };\n\n  return (\n    <Form form={form} name=\"horizontal_login\" layout=\"inline\" onFinish={onFinish}>\n      <Form.Item\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your username!',\n          },\n        ]}\n      >\n        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n        ]}\n      >\n        <Input\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n      </Form.Item>\n      <Form.Item shouldUpdate>\n        {() => (\n          <Button\n           \n            htmlType=\"submit\"\n            disabled={\n              !form.isFieldsTouched(true) ||\n              form.getFieldsError().filter(({ errors }) => errors.length).length\n            }\n          >\n            Log in\n          </Button>\n        )}\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default LoginForm","import React from 'react'\nimport { Layout } from 'antd';\nimport LoginForm from './loginForm';\n\n\n\nconst {  Content } = Layout;\nlet Login = props => {\n  console.log(process.env.NODE_ENV, 'env')\n  return(  <Layout>\n\n    <Content style={{backgroundColor: `#8E6AAC`, width: '100vw', height:'100vh', backgroundSize: 'cover', backgroundOrigin: 'content-box', display: 'flex', overflow:'hidden'}}>\n\n       \n        <div style={{\n        backgroundImage: `url('https://images.creativemarket.com/0.1.0/ps/1018030/910/607/m1/fpnw/wm0/my-desk-.jpg?1456207724&s=3ab17830770e59dcba5f8de761ea1004')`, \n        height: '100vh', \n        width: '50vw', \n        margin: 20,\n        backgroundRepeat:'no-repeat'}}/>\n         <div style={{marginLeft: '5vw'}}>\n        <div style={{color: 'white', fontSize: 50, width: '50vw',lineHeight: .8, justifyContent:'start', marginTop:'20vh', fontWeight: 700}}>TYPE+HYPE</div>\n        <div style={{color: 'white', fontSize: 20, width: '40vw', justifyContent:'start', marginTop:'20vh'}}>Can you type fast? Or it is just a hype?</div>\n        <div style={{color: 'white', fontSize: 30, width: '40vw', justifyContent:'start', marginBottom:'10vh', fontWeight: 600}}>Try it now!</div>\n        <div style={{color: 'white',  width: '50vw',  justifyContent:'start'}}>    <LoginForm/></div>\n        </div>\n\n    </Content>\n  \n  </Layout>\n)\n}\n\nexport default Login\n\n","import axios from 'axios';\n\nlet URL = process.env.NODE_ENV === 'development' ? \"http://localhost:3001\" : 'https://my-json-server.typicode.com/kipipatrick/type-hype';\n\nclass GameServices{\n\n\n    static async getText(){\n        let text = await axios.get(`https://baconipsum.com/api/?type=all-meat&start-with-lorem=1`)\n        console.log(text.data[Math.floor(Math.random() * 4) +1])\n        return text.data[Math.floor(Math.random() * 4) +1]\n    }\n\n    static async saveScore(value){\n        let user = JSON.parse(sessionStorage.getItem('CURRENT_USER'))\n        console.log(value)\n        let saveStore = await axios.post(`${URL}/scores`, {\n            id: new Date().getTime(),\n            name: user['name'],\n            score:value\n        })\n        return saveStore.data\n        \n    }\n\n    static  async getScores(){\n        let user = JSON.parse(sessionStorage.getItem('CURRENT_USER'))\n        let scores = await axios.get(`${URL}/scores`)\n        return scores.data.filter(item => item.name === user['name'])\n    }\n}\n\nexport default GameServices","import GameServices from './gameServices';\n\n\n\nexport const GameActionsTypes = {\n    GAME_REQUEST: '@@GAME_REQUEST',\n    GAME_SUCCESS: '@@GAME_SUCCESS',\n    GAME_FAILED: '@@GAME_FAILED',\n    GAME_SUCCESS_SCORES: '@@GAME_SUCCESS_SCORES',\n    \n}\n\n\n\nexport const getText = ()=>{\n       return async(dispatch)=>{\n            try {\n                dispatch({type: GameActionsTypes.GAME_REQUEST})\n            let text = await GameServices.getText()\n   \n              dispatch({type: GameActionsTypes.GAME_SUCCESS, payload: text})\n            } catch (error) {\n                console.log(error.message)\n                // dispatch(LoginActionsTypes.LOGIN_FAILED)\n            } \n        }\n    }\n    export const saveScore = (value, history)=>{\n\n        return async(dispatch)=>{\n             try {\n                 dispatch({type: GameActionsTypes.GAME_REQUEST})\n            await GameServices.saveScore(value)\n            // window.location.reload()\n         \n            //    dispatch({type: GameActionsTypes.GAME_SUCCESS, payload: text})\n             } catch (error) {\n                 console.log(error.message)\n                 // dispatch(LoginActionsTypes.LOGIN_FAILED)\n             } \n         }\n     }\n\n    export const getScores = ()=>{\n        return async(dispatch)=>{\n             try {\n                dispatch({type: GameActionsTypes.GAME_REQUEST})\n             let scores = await GameServices.getScores()\n    \n            dispatch({type: GameActionsTypes.GAME_SUCCESS_SCORES, payload: scores})\n             } catch (error) {\n                 console.log(error.message)\n                 // dispatch(LoginActionsTypes.LOGIN_FAILED)\n             } \n         }\n     }\n\n\nexport default {getText, getScores, saveScore}","import React from 'react'\nimport { Input, Row, Col , Statistic, Button, Modal, List, Rate, Progress} from 'antd'\nimport {getText, saveScore} from './gameActions'\nimport { useDispatch, useSelector ,shallowEqual} from 'react-redux'\nimport { useHistory } from \"react-router-dom\";\n\nlet TypingTest = (props)=>{\n    const dispatch = useDispatch()\n    let text = useSelector(state => state.game.text, shallowEqual)\n    let history = useHistory()\n    let [input, setInput] = React.useState('')\n    const [seconds, setSeconds] = React.useState(2);\n    const [timeUp, setTimeUp] = React.useState(0);\n    const [isActive, setIsActive] = React.useState(false);\n    const [showResults, setShowResults] = React.useState(false);\n    const speedResults = [{\n        rate: 5,\n        description: 'Fast',\n        minLimit: 40,\n        maxLimit: 'or more',\n\n    },\n    {\n        rate: 3,\n        description: 'Moderate',\n        minLimit: 24,\n        maxLimit: \"to 39\",\n\n    },\n    {\n        rate: 1,\n        description: 'Slow',\n        minLimit: 23,\n        maxLimit: 'or less',\n\n    }]\n    let textArray = text? text.split(' ').filter(text=> text !== '') : []\n    let inputArray = text? input.split(' ').filter(text=> text !== '')  : []\n    \n    React.useEffect(() => {\n        let interval = null;\n        if (isActive && seconds > 0) {\n          interval = setInterval(() => {\n            setSeconds(seconds => seconds - 1);\n            setTimeUp(timeUp=> timeUp +1)\n          }, 1000);\n        if(compareArray(inputArray, textArray)){\n            setIsActive(false)\n        }\n  \n        }\n \n        return () => clearInterval(interval);\n      }, [isActive, seconds]);\n\n      React.useEffect(() => {\n        dispatch(getText())\n\n      }, []);\n\n\n\n    function compareArray(input, text){\n        let x = false\n        if(input.length === text.length){\n            text.map((itm, idx)=>{\n             return x = itm === input[idx]\n            })\n        } else {\n          return false\n        }\n \n\n    }\n\n    function saveAndRetry(){\n      dispatch(saveScore(getCorrectText()/(timeUp/60),history))\n      setShowResults(false)\n    }\n    \n\n\n  \n  \n    \n    function setColor(index){\n        if(inputArray[index]){\n            if((inputArray[index]).replace(/\\s/g, '') === (textArray[index]).replace(/\\s/g, '')){\n                return 'blue'\n            } else {\n                return 'white'\n            }\n        } else {\n            return 'white'\n        }\n    \n    }\n\n    function setText(e){\n      setInput(e)\n    \n    //  compareArray(inputArray, textArray)\n     \n    }\n\n    function getCorrectText(){\n       let correct = 0\n      textArray.map((item, idx)=>{\n       if(item === inputArray[idx]){\n           correct = correct +1\n       }\n      }\n    \n      )\n    \n     return correct\n    }\n\nconsole.log(getCorrectText(),(timeUp * 0.0166667, timeUp))\n    \n    \n    return(\n        <div>\n          <Modal\n          title=\"Your Results\"\n          visible={showResults}\n          onOk={()=>saveAndRetry()}\n          okText={'Save and Retry'}\n          // onCancel={()=>setShowResults(false)}\n        >\n         <Row gutter={16}>\n    <Col span={24}>\n      <Statistic round style={{backgroundColor: 'white', }}   valueStyle={{ color: '#8E6AAC', fontWeight: 600 }}  title=\"Total Words\" value={getCorrectText()/(timeUp/60)+' WPM'} />\n    </Col>\n   \n  </Row>\n  <div style={{color:\"#8E6AAC\", fontWeight:600, fontSize: 16, marginTop:10, marginBottom:10}}>What your score means</div>\n  <List\n    itemLayout=\"horizontal\"\n    dataSource={speedResults}\n    renderItem={item => (\n      <List.Item>\n        <List.Item.Meta\n    avatar={<Rate value={item.rate}/>}\n          title={<span style={{color:\"#8E6AAC\", fontWeight:600}}>{item.description}</span>}\n          description={`You can correctly encode ${item.minLimit} ${item.maxLimit} words per minute`}\n        />\n      </List.Item>\n    )}\n  />\n\n        </Modal>\n\n              <Row gutter={16} style={{marginTop: 20, marginBottom:20}}>\n    <Col span={5}>\n      <Statistic round style={{backgroundColor: 'white', padding: 20,}}   valueStyle={{ color: '#8E6AAC', fontWeight: 600 }}  title=\"Total Words\" value={textArray.length} />\n    </Col>\n    <Col span={5}>\n      <Statistic style={{backgroundColor: 'white', padding: 20,}}   valueStyle={{ color: '#8E6AAC', fontWeight: 600 }} title=\"Correct Words\" value={getCorrectText() +'/'+ inputArray.length} />\n    </Col>\n    <Col span={5}>\n      <Statistic style={{backgroundColor: 'white', padding: 20,}}   valueStyle={{ color: '#8E6AAC', fontWeight: 600 }} title=\"Incorrect Words\" value={inputArray.length - getCorrectText()} />\n    </Col>\n   \n    <Col span={5} >\n      <Statistic style={{backgroundColor: 'white', padding: 20,}}   valueStyle={{ color: '#8E6AAC', fontWeight: 600 }}title=\"Time Remaining\" value={seconds + 's'}  />\n    \n    </Col>\n  \n  </Row>\n  <div style={{marginBottom:20, fontSize: 20, fontWeight: 600, color: 'white'}}>Try this!</div>\n            <div style={{marginBottom:20}}>{textArray.map((item, idx)=>{\n               return <span key={idx} style={{color: setColor(idx), fontSize: 16, fontWeight:400}}>{item}{' '}</span>\n            })}</div>\n    <div style={{marginBottom:20, fontSize: 20, fontWeight: 600, color: 'white'}}>Type here to start time!</div>\n \n    <Row gutter={16}>\n            <Col span={18}>\n                <Input.TextArea\n               \n                disabled={ seconds === 0|| compareArray(inputArray, textArray)   }\n                onClick={()=>setIsActive(true)}\n                value={input}\n                onChange={e=> setText(e.target.value)}\n                multiple\n                rows={5}\n                />\n            </Col>\n            <Col span={6}>\n            <Progress\n    type='circle'\n\n\n      strokeColor={{\n        '0%': 'white',\n        '100%': '#8E6AAC',\n      }}\n      percent={(inputArray.length/textArray.length *100).toFixed(0)}\n    />\n            </Col>\n            </Row>\n            <div style={{color: 'white', fontSize: 16, fontWeight: \"bold\", marginTop: '5vh', marginBottom: '5vh', display: seconds === 0|| compareArray(inputArray, textArray) ? '': \"none\"}}><Button onClick={()=>setShowResults(true)}>Show Results</Button></div>\n\n        </div>\n        \n    )\n}\n\nexport default TypingTest;","import React from 'react'\nimport { Row, Col, Button, Rate } from 'antd';\n\nimport { getScores } from './gameActions';\nimport { useSelector, useDispatch,shallowEqual } from 'react-redux';\nimport TypingTest from './typeTest';\nimport moment from 'moment'\nimport { useHistory } from 'react-router';\nimport { logout } from '../login/loginActions';\n\n\nlet Game = ()=>{\n    let user = JSON.parse(sessionStorage.getItem('CURRENT_USER'))\n    let scores = useSelector(state=> state.game.scores? state.game.scores: [], shallowEqual)\n\n    let history= useHistory()\n    const [showTest, setShowTest] = React.useState(false)\n    let dispatch = useDispatch()\n    React.useEffect(()=>{\n        dispatch(getScores())\n    }, [])\n    if(!user){\n        history.push('/')\n    }\n  \n    return (\n        <Row>\n        <Col style={{backgroundColor: `#8E6AAC`, padding: 20, height: '100vh'}} span={6} >\n           <div style={{color: 'white', fontSize: 50, fontWeight: \"600\"}}>Type+Hype</div>\n           <div style={{color: 'white', fontSize: 20, fontWeight: 600, marginTop:'5vh'}}>Your Last 5 Records</div>\n        <div style={{color: 'white', fontSize: 14, marginTop: 10, marginBottom: 10, minHeight: '30vh'}}>\n        {\n                scores.length === 0? <div style={{fontWeight: 300}}> No game recorded. </div> : ''\n            }\n\n            {\n                scores.sort((a,b)=> b.currentScore -a.currentScore).slice(0,5).map((item, key)=>{\n                return <div key={key}style={{fontSize: 12, fontWeight:600, marginBottom: 20}}>{item['name'] + '-'+ item['score']}<span style={{fontWeight: 300}}> ({moment(item['id']).format('DD MMMM YYYY hh:mm ') })</span> <div><Rate /></div></div>\n                }) \n             \n            }\n           \n        </div>\n\n        <div style={{color: 'white', fontSize: 20, fontWeight: 600,}}>About Type+Hype</div>\n        <div style={{color: 'white', fontSize: 14, }}>React.js based application that will allow user to improve his/her typing skills, by measuring current progress and reviewing history of previous games.</div>\n\n        </Col>\n        <Col style={{backgroundColor: '#8E6AAC', height: '100vh', padding: 20, overflow: 'auto'}} span={18} >\n        <div style={{fontSize: 30, color: 'white', marginTop: 20}}> Welcome! <span style={{fontWeight:600}}>{user['name']}</span><Button size='large' onClick={ ()=>dispatch(logout(history))} style={{float: \"right\", background: '#8E6AAC', color:'white'}} >Logout</Button></div> \n        <div style={{color: 'white', fontSize: 16, fontWeight: \"bold\", marginTop: '5vh', marginBottom: '5vh', display: showTest? 'none': \"\"}}><Button  size='large' style={{ background: '#8E6AAC', color:'white'}} onClick={()=>setShowTest(true)}>Start Typing Test</Button></div>\n \n       {\n           showTest ?<TypingTest/>: ''\n       }\n        </Col>\n      </Row>\n    )\n}\n\nexport default Game","import { handleActions } from \"redux-actions\";\nimport { LoginActionsTypes } from \"./loginActions\";\n\n\nconst initialState = {\n  user: null,\n  loading: false,\n  error: null\n};\n\nexport default handleActions(\n  {\n    [LoginActionsTypes.LOGIN_REQUEST]: (state, action) => {\n      return {\n        ...state,\n        loading: true\n      };\n    },\n    [LoginActionsTypes.LOGIN_SUCCESS]: (state, action) => {\n      return {\n        ...state,\n        user: action.payload\n      };\n    }\n  },\n  initialState\n);\n","import { handleActions } from \"redux-actions\";\nimport { GameActionsTypes } from \"./gameActions\";\n\n\nconst initialState = {\n  text: null,\n  loading: false,\n  error: null,\n  scores: []\n};\n\nexport default handleActions(\n  {\n    [GameActionsTypes.GAME_REQUEST]: (state, action) => {\n      return {\n        ...state,\n        loading: true\n      };\n    },\n    [GameActionsTypes.GAME_SUCCESS]: (state, action) => {\n      return {\n        ...state,\n \n        text: action.payload\n      };\n    },\n    [GameActionsTypes.GAME_SUCCESS_SCORES]: (state, action) => {\n        return {\n          ...state,\n    \n          scores: action.payload\n        };\n      }\n  },\n  initialState\n);\n","import { combineReducers } from 'redux';\nimport loginReducers from './components/login/loginReducer';\nimport gameReducers from './components/game/gameReducers';\nexport default combineReducers({\n    auth : loginReducers,\n    game: gameReducers\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { routerMiddleware } from \"react-router-redux\";\nimport createHistory from \"history/createBrowserHistory\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./rootReducer\";\n\nexport const history = createHistory();\nexport default function reduxStore(initialState) {\n  const store = createStore(\n    reducers,\n    initialState,\n    compose(\n      applyMiddleware(thunk, routerMiddleware(history)),\n      window.devToolsExtension ? window.devToolsExtension() : f => f\n    )\n  );\n  return store;\n}\n","import React from 'react';\nimport {  Route , HashRouter } from 'react-router-dom';\nimport './App.css';\nimport Login from './components/login/login';\nimport Game from './components/game/game';\nimport store from './store'\nimport { Provider } from 'react-redux';\n\n\n\nfunction App() {\n\n\n  return (\n    <Provider store={store()} >\n      <HashRouter basename={process.env.PUBLIC_URL} >\n        <Route exact path='/' component={Login} />\n        <Route exact path={'/game'} component={Game}/>\n      </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'antd/dist/antd.css'\n\n\nReactDOM.render(\n\n\n    <App />\n\n ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}