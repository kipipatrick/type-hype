{"version":3,"sources":["components/login/loginServices.js","components/login/loginActions.js","components/login/loginForm.js","components/login/login.js","components/game/gameServices.js","components/game/gameActions.js","components/game/typeTest.js","components/game/game.js","components/login/loginReducer.js","components/game/gameReducers.js","rootReducer.js","store.js","App.js","serviceWorker.js","index.js"],"names":["knownUsers","name","email","password","currentScore","LoginServices","user","filter","sessionStorage","setItem","JSON","stringify","Error","LoginActionsTypes","login","history","dispatch","console","log","push","type","payload","error","message","clear","LoginForm","useDispatch","useHistory","Form","useForm","form","useState","forceUpdate","useEffect","layout","onFinish","values","username","Item","rules","required","prefix","UserOutlined","className","placeholder","LockOutlined","shouldUpdate","style","background","color","htmlType","disabled","isFieldsTouched","getFieldsError","errors","length","Content","Layout","Login","props","useSelector","state","auth","backgroundColor","width","height","backgroundSize","backgroundOrigin","display","overflow","backgroundImage","margin","backgroundRepeat","marginLeft","fontSize","lineHeight","justifyContent","marginTop","fontWeight","marginBottom","closable","onClose","URL","GameServices","axios","get","text","data","Math","floor","random","value","parse","getItem","post","id","Date","getTime","score","headers","saveStore","scores","item","GameActionsTypes","getText","a","saveScore","save","getScores","TypingTest","game","shallowEqual","saved","React","input","setInput","seconds","setSeconds","timeUp","setTimeUp","isActive","setIsActive","showResults","setShowResults","textArray","split","inputArray","compareArray","x","map","itm","idx","saveAndRetry","getCorrectText","correct","interval","setInterval","clearInterval","title","padding","visible","onOk","onCancel","okText","cancelButtonProps","okButtonProps","size","gutter","span","itemLayout","dataSource","rate","description","minLimit","maxLimit","renderItem","Meta","avatar","window","location","reload","moment","format","round","valueStyle","key","index","replace","TextArea","onClick","onChange","e","setText","target","multiple","rows","strokeColor","percent","toFixed","Game","showTest","setShowTest","minHeight","sort","b","slice","parseFloat","removeItem","logout","float","initialState","loading","handleActions","action","combineReducers","loginReducers","gameReducers","createHistory","App","store","createStore","reducers","compose","applyMiddleware","thunk","routerMiddleware","devToolsExtension","f","basename","process","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.670157e2.chunk.js","sourcesContent":["const knownUsers = [\n    {\n        name: 'Rain Sindayen',\n        email: 'rain@sindayen.com',\n        password: 'P@ssw0rd123!',\n        currentScore: 110\n    },\n    {\n        name: 'Kipi Patrick',\n        email: 'kipi@patrick.com',\n        password: 'P@ssw0rd123!',\n        currentScore:115\n    }\n]\n\n\nclass LoginServices {\n   static login(email, password){\n      let user = knownUsers.filter(user => user['email'] === email)\n      if(user[0]){\n        if(user[0]['password']=== password){\n            sessionStorage.setItem('CURRENT_USER', JSON.stringify(user[0]))\n            return {\n                name: user[0].name,\n                email: user[0].email\n            }\n        } else {\n            throw new Error('Username or Password may be incorrect. Please try again.') \n        }\n      } else {\n        throw new Error('User Not Found')\n      }\n    }\n}\n\nexport default LoginServices","\nimport LoginServices from './loginServices';\n\n\nexport const LoginActionsTypes = {\n    LOGIN_REQUEST: '@@LOGIN_REQUEST',\n    LOGIN_SUCCESS: '@@LOGIN_SUCCESS',\n    LOGIN_FAILED: '@@LOGIN_FAILED',\n    CLEAR: '@@CLEAR',\n}\n\n\n\nexport const login =(email,password, history)=>{\n\n        return (dispatch)=>{\n            try {\n       \n                console.log(email,password )\n            //  dispatch(LoginActionsTypes.LOGIN_REQUEST)\n                let user = LoginServices.login(email, password)\n                if(user){\n              history.push('/game')\n                }\n              dispatch({type: LoginActionsTypes.LOGIN_SUCCESS, payload: user})\n            } catch (error) {\n                dispatch({type: LoginActionsTypes.LOGIN_FAILED, payload: error.message})\n                // dispatch(LoginActionsTypes.LOGIN_FAILED)\n            } \n        }\n    }\n\n    export const logout =(history)=>{\n        return (dispatch)=>{\n            try {\n              sessionStorage.removeItem('CURRENT_USER')\n              history.push('/')\n            } catch (error) {\n                console.log(error.message)\n                // dispatch(LoginActionsTypes.LOGIN_FAILED)\n            } \n        }\n    }\n\n    export const clear =()=>{\n        return (dispatch)=>{\n            try {\n                dispatch({type: LoginActionsTypes.CLEAR})\n            } catch (error) {\n                console.log(error.message)\n                // dispatch(LoginActionsTypes.LOGIN_FAILED)\n            } \n        }\n    }\n\n\n\n\nexport default {login, clear}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport {login} from './loginActions';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\n\n\nconst LoginForm = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const [form] = Form.useForm();\n  const [, forceUpdate] = useState(); // To disable submit button at the beginning.\n\n  useEffect(() => {\n    forceUpdate({});\n  }, []);\n\n  const onFinish = values => {\ndispatch(login(values.username, values.password, history))\n\n  };\n\n  return (\n    <Form form={form} name=\"horizontal_login\" layout=\"inline\" onFinish={onFinish}>\n      <Form.Item\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your username!',\n          },\n        ]}\n      >\n        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n        ]}\n      >\n        <Input\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n      </Form.Item>\n      <Form.Item shouldUpdate>\n        {() => (\n          <Button\n      style={{     background: '#8E6AAC', color:'white'}}\n            htmlType=\"submit\"\n            disabled={\n              !form.isFieldsTouched(true) ||\n              form.getFieldsError().filter(({ errors }) => errors.length).length\n            }\n          >\n            Log in\n          </Button>\n        )}\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default LoginForm","import React from 'react'\nimport { Layout, Alert } from 'antd';\nimport LoginForm from './loginForm';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {clear} from './loginActions'\n\n\nconst {  Content } = Layout;\nlet Login = props => {\n  let error = useSelector(state=>state.auth.error)\n  let dispatch = useDispatch()\n  return(  <Layout>\n\n    <Content style={{backgroundColor: `#8E6AAC`, width: '100vw', height:'100vh', backgroundSize: 'cover', backgroundOrigin: 'content-box', display: 'flex', overflow:'hidden'}}>\n\n \n        <div style={{\n        backgroundImage: `url('https://images.creativemarket.com/0.1.0/ps/1018030/910/607/m1/fpnw/wm0/my-desk-.jpg?1456207724&s=3ab17830770e59dcba5f8de761ea1004')`, \n        height: '100vh', \n        width: '50vw', \n        margin: 20,\n        backgroundRepeat:'no-repeat'}}/>\n         <div style={{marginLeft: '5vw'}}>\n     \n        <div style={{color: 'white', fontSize: 50, width: '50vw',lineHeight: .8, justifyContent:'start', marginTop:'20vh', fontWeight: 700}}>TYPE+HYPE</div>\n        <div style={{color: 'white', fontSize: 20, width: '40vw', justifyContent:'start', marginTop:'20vh'}}>Can you type fast? Or it is just a hype?</div>\n        <div style={{color: 'white', fontSize: 30, width: '40vw', justifyContent:'start', marginBottom:'10vh', fontWeight: 600}}>Try it now!</div>\n        <div style={{ width: '35vw', justifyContent:'start', marginBottom:\"5vh\",  fontWeight: 400}}>\n          \n          {\n            error?<Alert\n            closable\n            onClose={()=> dispatch(clear())}\n            type={\"error\"}\n            message={error}\n            /> : ''\n          }\n           </div>\n       \n        <div style={{color: 'white',  width: '50vw',  justifyContent:'start'}}>    <LoginForm/></div>\n        </div>\n\n    </Content>\n  \n  </Layout>\n)\n}\n\nexport default Login\n\n","import axios from 'axios';\n\nlet URL = process.env.NODE_ENV === 'development' ? \"http://localhost:3001\" : 'https://my-json-server.typicode.com/kipipatrick/type-hype';\n\nclass GameServices{\n\n\n    static async getText(){\n        let text = await axios.get(`https://baconipsum.com/api/?type=all-meat&start-with-lorem=1`)\n        return text.data[Math.floor(Math.random() * 4) +1]\n    }\n\n    static async saveScore(value){\n        let user = JSON.parse(sessionStorage.getItem('CURRENT_USER'))\n        let saveStore = await axios.post(`${URL}/scores`, {\n            id: new Date().getTime(),\n            name: user['name'],\n            score:value\n        }, {\n            headers: {\n                \"Content-header\": 'application/json'\n            }\n        })\n        return saveStore.data\n        \n    }\n\n    static  async getScores(){\n        let user = JSON.parse(sessionStorage.getItem('CURRENT_USER'))\n        let scores = await axios.get(`${URL}/scores`)\n        \n        return scores.data.filter(item => item.name === user['name'])\n    }\n}\n\nexport default GameServices","import GameServices from './gameServices';\n\n\n\nexport const GameActionsTypes = {\n    GAME_REQUEST: '@@GAME_REQUEST',\n    GAME_SUCCESS: '@@GAME_SUCCESS',\n    GAME_FAILED: '@@GAME_FAILED',\n    GAME_SUCCESS_SCORES: '@@GAME_SUCCESS_SCORES',\n    SAVE_GAME: '@@SAVE_GAME',\n    \n}\n\n\n\nexport const getText = ()=>{\n       return async(dispatch)=>{\n            try {\n                dispatch({type: GameActionsTypes.GAME_REQUEST})\n            let text = await GameServices.getText()\n   \n              dispatch({type: GameActionsTypes.GAME_SUCCESS, payload: text})\n            } catch (error) {\n                console.log(error.message)\n                // dispatch(LoginActionsTypes.LOGIN_FAILED)\n            } \n        }\n    }\n    export const saveScore = (value, history)=>{\n\n        return async(dispatch)=>{\n             try {\n                 dispatch({type: GameActionsTypes.GAME_REQUEST})\n           let save = await GameServices.saveScore(value)\n            // window.location.reload()\n         \n            dispatch({type: GameActionsTypes.SAVE_GAME, payload: save})\n             } catch (error) {\n                 console.log(error.message)\n                 // dispatch(LoginActionsTypes.LOGIN_FAILED)\n             } \n         }\n     }\n\n    export const getScores = ()=>{\n        return async(dispatch)=>{\n             try {\n                dispatch({type: GameActionsTypes.GAME_REQUEST})\n             let scores = await GameServices.getScores()\n    \n            dispatch({type: GameActionsTypes.GAME_SUCCESS_SCORES, payload: scores})\n             } catch (error) {\n                 console.log(error.message)\n                 // dispatch(LoginActionsTypes.LOGIN_FAILED)\n             } \n         }\n     }\n\n\nexport default {getText, getScores, saveScore}","import React from \"react\";\nimport {\n  Input,\n  Row,\n  Col,\n  Statistic,\n  Button,\n  Modal,\n  List,\n  Rate,\n  Progress,\n} from \"antd\";\nimport { getText, saveScore } from \"./gameActions\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\nlet TypingTest = (props) => {\n  const dispatch = useDispatch();\n  let text = useSelector((state) => state.game.text, shallowEqual);\n  let saved = useSelector((state) => state.game.saved, shallowEqual);\n  let history = useHistory();\n  let [input, setInput] = React.useState(\"\");\n  const [seconds, setSeconds] = React.useState(60);\n  const [timeUp, setTimeUp] = React.useState(0);\n  const [isActive, setIsActive] = React.useState(false);\n  const [showResults, setShowResults] = React.useState(false);\n  const speedResults = [\n    {\n      rate: 5,\n      description: \"Fast\",\n      minLimit: 40,\n      maxLimit: \"or more\",\n    },\n    {\n      rate: 3,\n      description: \"Moderate\",\n      minLimit: 24,\n      maxLimit: \"to 39\",\n    },\n    {\n      rate: 1,\n      description: \"Slow\",\n      minLimit: 23,\n      maxLimit: \"or less\",\n    },\n  ];\n  let textArray = text ? text.split(\" \").filter((text) => text !== \"\") : [];\n  let inputArray = text ? input.split(\" \").filter((text) => text !== \"\") : [];\n\n  React.useEffect(() => {\n    let interval = null;\n    if (isActive && seconds > 0) {\n      interval = setInterval(() => {\n        setSeconds((seconds) => seconds - 1);\n        setTimeUp((timeUp) => timeUp + 1);\n      }, 1000);\n      if (compareArray(inputArray, textArray)) {\n        setIsActive(false);\n      }\n    }\n\n    return () => clearInterval(interval);\n  }, [isActive, seconds]);\n\n  React.useEffect(() => {\n    dispatch(getText());\n  }, []);\n\n  function confirmSave() {\n    window.location.reload();\n  }\n\n  function compareArray(input, text) {\n    let x = false;\n    if (input.length === text.length) {\n      text.map((itm, idx) => {\n        x = itm === input[idx];\n      });\n    } else {\n      return false;\n    }\n    return x;\n  }\n\n  function saveAndRetry() {\n    dispatch(saveScore(getCorrectText() / (timeUp / 60), history));\n    setShowResults(false);\n  }\n\n  function setColor(index) {\n    if (inputArray[index]) {\n      if (\n        inputArray[index].replace(/\\s/g, \"\") ===\n        textArray[index].replace(/\\s/g, \"\")\n      ) {\n        return \"#25343E\";\n      } else {\n        return \"white\";\n      }\n    } else {\n      return \"white\";\n    }\n  }\n\n  function setText(e) {\n    setInput(e);\n  }\n\n  function returnStar(value){\n    console.log(value)\n    if(value >= 40){\n        return 5\n    } else if( value < 40 && value >23){\n        return 3\n    } else if(value <= 23){\n        return 1\n    }\n}\n\n\n  function getCorrectText() {\n    let correct = 0;\n    textArray.map((item, idx) => {\n      if (item === inputArray[idx]) {\n        correct = correct + 1;\n      }\n    });\n\n    return correct;\n  }\n\n  return (\n    <div>\n      <Modal\n        title={\n          <div\n            style={{\n              color: \"#8E6AAC\",\n            }}\n          >\n            Your Results\n          </div>\n        }\n        style={{\n          padding: 1,\n          backgroundColor: \"#8E6AAC\",\n        }}\n        visible={showResults}\n        onOk={() => saveAndRetry()}\n        onCancel={() => saveAndRetry()}\n        okText={\"Save and Retry\"}\n        cancelButtonProps={{ style: { display: \"none\" } }}\n        okButtonProps={{\n          size: \"large\",\n          style: {\n            background: \"#8E6AAC\",\n            color: \"white\",\n          },\n        }}\n        // onCancel={()=>setShowResults(false)}\n      >\n        <Row gutter={16}>\n          <Col span={24} style={{justifyContent: 'center', display: 'flex'}}>\n            <div>\n          \n          <div style={{justifyContent: 'center', display: 'flex', fontSize: 20,  color: \"#8E6AAC\",\n            fontWeight: 400,}}>{getCorrectText() / (timeUp / 60) }<span style={{color: 'grey', fontWeight: 200, fontSize: 20}}>   &nbsp;WPM</span></div>\n          <Rate value={returnStar(getCorrectText() / (timeUp / 60))}/>\n            </div>\n          </Col>\n        </Row>\n        <div\n          style={{\n            color: \"#8E6AAC\",\n            fontWeight: 400,\n            fontSize: 16,\n            marginTop: 10,\n            marginBottom: 10,\n          }}\n        >\n          What your score means\n        </div>\n        <List\n          itemLayout=\"horizontal\"\n          dataSource={speedResults}\n          renderItem={(item) => (\n            <List.Item>\n              <List.Item.Meta\n                avatar={<Rate value={item.rate} />}\n                title={\n                  <span style={{ color: \"#8E6AAC\", fontWeight: 600 }}>\n                    {item.description}\n                  </span>\n                }\n                description={`You can correctly encode ${item.minLimit} ${item.maxLimit} words per minute`}\n              />\n            </List.Item>\n          )}\n        />\n      </Modal>\n      <Modal\n         title={\n          <div\n            style={{\n              color: \"#8E6AAC\",\n            }}\n          >\n         Results Saved\n          </div>\n        }\n        style={{\n          padding: 1,\n        }}\n        okText={\"OK\"}\n        cancelButtonProps={{ style: { display: \"none\" } }}\n        okButtonProps={{\n          size: \"large\",\n          style: {\n            background: \"#8E6AAC\",\n            color: \"white\",\n          },\n        }}\n        visible={saved}\n        onOk={confirmSave}\n      >\n       \n        <div style={{  fontSize: 14, fontWeight: 600 }}>\n          ID : {saved ? saved[\"id\"] : \"\"}\n        </div>\n        <div style={{  fontSize: 14, fontWeight: 600 }}>\n          NAME : {saved ? saved[\"name\"] : \"\"}\n        </div>\n        <div style={{  fontSize: 14, fontWeight: 600 }}>\n          Score : {saved ? saved[\"score\"] : \"\"}\n        </div>\n        <div style={{ fontSize: 14, fontWeight: 600 }}>\n          DATE: {saved ? moment(saved[\"id\"]).format(\"DD MMM YYYY hh:mm A\") : \"\"}\n        </div>\n      </Modal>\n\n      <Row gutter={16} style={{ marginTop: 20, marginBottom: 20 }}>\n        <Col span={5}>\n          <Statistic\n            round\n            style={{ backgroundColor: \"white\", padding: 20 }}\n            valueStyle={{ color: \"#8E6AAC\", fontWeight: 600 }}\n            title=\"Total Words\"\n            value={textArray.length}\n          />\n        </Col>\n        <Col span={5}>\n          <Statistic\n            style={{ backgroundColor: \"white\", padding: 20 }}\n            valueStyle={{ color: \"#8E6AAC\", fontWeight: 600 }}\n            title=\"Correct Words\"\n            value={getCorrectText()}\n          />\n        </Col>\n        <Col span={5}>\n          <Statistic\n            style={{ backgroundColor: \"white\", padding: 20 }}\n            valueStyle={{ color: \"#8E6AAC\", fontWeight: 600 }}\n            title=\"Incorrect Words\"\n            value={inputArray.length - getCorrectText()}\n          />\n        </Col>\n\n        <Col span={5}>\n          <Statistic\n            style={{ backgroundColor: \"white\", padding: 20 }}\n            valueStyle={{ color: \"#8E6AAC\", fontWeight: 600 }}\n            title=\"Time Remaining\"\n            value={seconds + \"s\"}\n          />\n        </Col>\n      </Row>\n      <div\n        style={{\n          marginBottom: 20,\n          fontSize: 20,\n          fontWeight: 600,\n          color: \"white\",\n        }}\n      >\n        Try this!\n      </div>\n      <div style={{ marginBottom: 20 }}>\n        {textArray.map((item, idx) => {\n          return (\n            <span\n              key={idx}\n              style={{ color: setColor(idx), fontSize: 16, fontWeight: 400 }}\n            >\n              {item}{\" \"}\n            </span>\n          );\n        })}\n      </div>\n      <div\n        style={{\n          marginBottom: 20,\n          fontSize: 20,\n          fontWeight: 600,\n          color: \"white\",\n        }}\n      >\n        Type here to start time!\n      </div>\n      {textArray.length > 0 ? (\n        <div>\n          <Row gutter={16}>\n            <Col span={18}>\n              <Input.TextArea\n                disabled={seconds === 0 || compareArray(inputArray, textArray)}\n                onClick={() => setIsActive(true)}\n                value={input}\n                onChange={(e) => setText(e.target.value)}\n                multiple\n                rows={5}\n              />\n            </Col>\n            <Col span={6}>\n              <Progress\n                type=\"circle\"\n                strokeColor={{\n                  \"0%\": \"white\",\n                  \"100%\": \"#8E6AAC\",\n                }}\n                percent={((inputArray.length / textArray.length) * 100).toFixed(\n                  0\n                )}\n              />\n            </Col>\n          </Row>\n\n          <div\n            style={{\n              color: \"white\",\n              fontSize: 16,\n              fontWeight: \"bold\",\n              marginTop: \"5vh\",\n              marginBottom: \"5vh\",\n              display:\n                seconds === 0 || compareArray(inputArray, textArray)\n                  ? \"\"\n                  : \"none\",\n            }}\n          >\n            <Button\n              size=\"large\"\n              style={{ background: \"#8E6AAC\", color: \"white\" }}\n              onClick={() => setShowResults(true)}\n            >\n              Show Results\n            </Button>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default TypingTest;\n","import React from \"react\";\nimport { Row, Col, Button, Rate } from \"antd\";\n\nimport { getScores } from \"./gameActions\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport TypingTest from \"./typeTest\";\nimport moment from \"moment\";\nimport { useHistory } from \"react-router\";\nimport { logout } from \"../login/loginActions\";\n\nlet Game = () => {\n  let user = JSON.parse(sessionStorage.getItem(\"CURRENT_USER\"));\n  let scores = useSelector(\n    (state) => (state.game.scores ? state.game.scores : []),\n    shallowEqual\n  );\n\n  let history = useHistory();\n  const [showTest, setShowTest] = React.useState(false);\n  let dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getScores());\n  }, []);\n  if (!user) {\n    history.push(\"/\");\n  }\n\n  function returnStar(value) {\n    if (value >= 40) {\n      return 5;\n    } else if (value < 40 && value > 23) {\n      return 3;\n    } else if (value <= 23) {\n      return 1;\n    }\n  }\n\n  return (\n    <Row\n      gutter={16}\n      style={{ backgroundColor: `#8E6AAC`, padding: 20, overflow: \"hidden\" }}\n    >\n      <Col style={{ padding: 20, height: \"100vh\" }} span={6}>\n        <div style={{ color: \"white\", fontSize: 50, fontWeight: \"600\" }}>\n          Type+Hype\n        </div>\n        <div\n          style={{\n            color: \"white\",\n            fontSize: 20,\n            fontWeight: 600,\n            marginTop: \"5vh\",\n          }}\n        >\n          Your Last 5 Records\n        </div>\n        <div\n          style={{\n            color: \"white\",\n            fontSize: 14,\n            marginTop: 10,\n            marginBottom: 10,\n            minHeight: \"30vh\",\n          }}\n        >\n          {scores.length === 0 ? (\n            <div style={{ fontWeight: 300 }}> No game recorded. </div>\n          ) : (\n            \"\"\n          )}\n\n          {scores\n            .sort((a, b) => b.score - a.score)\n            .slice(0, 5)\n            .map((item, key) => {\n              return (\n                <div\n                  key={key}\n                  style={{ fontSize: 12, fontWeight: 600, marginBottom: 20 }}\n                >\n                  {parseFloat(item[\"score\"]).toFixed(0) + \" WPM\"}\n                  <span style={{ fontWeight: 300 }}>\n                    {\" \"}\n                    ({moment(item[\"id\"]).format(\"DD MMMM YYYY hh:mm \")})\n                  </span>{\" \"}\n                  <div>\n                    <Rate value={returnStar(item[\"score\"])} />\n                  </div>\n                </div>\n              );\n            })}\n        </div>\n\n        <div style={{ color: \"white\", fontSize: 20, fontWeight: 600 }}>\n          About Type+Hype\n        </div>\n        <div style={{ color: \"white\", fontSize: 14 }}>\n          React.js based application that will allow user to improve his/her\n          typing skills, by measuring current progress and reviewing history of\n          previous games.\n        </div>\n      </Col>\n      <Col\n        style={{\n          backgroundColor: \"#8E6AAC\",\n          height: \"100vh\",\n          padding: 20,\n          overflow: \"hidden\",\n        }}\n        span={18}\n      >\n        <div style={{ fontSize: 30, color: \"white\", marginTop: 20 }}>\n          {\" \"}\n          Welcome! <span style={{ fontWeight: 600 }}>{user[\"name\"]}</span>\n          <Button\n            size=\"large\"\n            onClick={() => dispatch(logout(history))}\n            style={{ float: \"right\", background: \"#8E6AAC\", color: \"white\" }}\n          >\n            Logout\n          </Button>\n        </div>\n        {!showTest ? (\n          <div\n            style={{\n              fontSize: 14,\n              color: \"white\",\n              marginTop: \"5vh\",\n              fontWeight: 600,\n              width: \"50%\",\n            }}\n          >\n            Tests the your typing speed and accuracy. Try it now to see how many\n            correct words you can type in a minute. Get a free assessment after\n            your type test--are you all hype or can you really type?\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        <div\n          style={{\n            color: \"white\",\n            fontSize: 16,\n            fontWeight: \"bold\",\n            marginTop: \"5vh\",\n            marginBottom: \"5vh\",\n            display: showTest ? \"none\" : \"\",\n          }}\n        >\n          <Button\n            size=\"large\"\n            style={{ background: \"#8E6AAC\", color: \"white\" }}\n            onClick={() => setShowTest(true)}\n          >\n            Start Typing Test\n          </Button>\n        </div>\n\n        {showTest ? <TypingTest /> : \"\"}\n      </Col>\n    </Row>\n  );\n};\n\nexport default Game;\n","import { handleActions } from \"redux-actions\";\nimport { LoginActionsTypes } from \"./loginActions\";\n\n\nconst initialState = {\n  user: null,\n  loading: false,\n  error: null\n};\n\nexport default handleActions(\n  {\n    [LoginActionsTypes.LOGIN_REQUEST]: (state, action) => {\n      return {\n        ...state,\n        loading: true\n      };\n    },\n    [LoginActionsTypes.LOGIN_SUCCESS]: (state, action) => {\n      return {\n        ...state,\n        user: action.payload\n      };\n    },\n    [LoginActionsTypes.LOGIN_FAILED]: (state, action) => {\n      return {\n        ...state,\n        error: action.payload\n      };\n    },\n    [LoginActionsTypes.CLEAR]: (state, action) => {\n      return {\n        initialState\n      };\n    }\n  },\n  initialState\n);\n","import { handleActions } from \"redux-actions\";\nimport { GameActionsTypes } from \"./gameActions\";\n\n\nconst initialState = {\n  text: null,\n  loading: false,\n  error: null,\n  scores: [],\n  saved: null\n};\n\nexport default handleActions(\n  {\n    [GameActionsTypes.GAME_REQUEST]: (state, action) => {\n      return {\n        ...state,\n        loading: true\n      };\n    },\n    [GameActionsTypes.GAME_SUCCESS]: (state, action) => {\n      return {\n        ...state,\n \n        text: action.payload\n      };\n    },\n    [GameActionsTypes.SAVE_GAME]: (state, action) => {\n      return {\n        ...state,\n \n        saved: action.payload\n      };\n    },\n    [GameActionsTypes.GAME_SUCCESS_SCORES]: (state, action) => {\n        return {\n          ...state,\n    \n          scores: action.payload\n        };\n      }\n  },\n  initialState\n);\n","import { combineReducers } from 'redux';\nimport loginReducers from './components/login/loginReducer';\nimport gameReducers from './components/game/gameReducers';\nexport default combineReducers({\n    auth : loginReducers,\n    game: gameReducers\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { routerMiddleware } from \"react-router-redux\";\nimport createHistory from \"history/createBrowserHistory\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./rootReducer\";\n\nexport const history = createHistory();\nexport default function reduxStore(initialState) {\n  const store = createStore(\n    reducers,\n    initialState,\n    compose(\n      applyMiddleware(thunk, routerMiddleware(history)),\n      window.devToolsExtension ? window.devToolsExtension() : f => f\n    )\n  );\n  return store;\n}\n","import React from 'react';\nimport {  Route , HashRouter } from 'react-router-dom';\nimport './App.css';\nimport Login from './components/login/login';\nimport Game from './components/game/game';\nimport store from './store'\nimport { Provider } from 'react-redux';\n\n\n\nfunction App() {\n\n\n  return (\n    <Provider store={store()} >\n      <HashRouter basename={process.env.PUBLIC_URL} >\n        <Route exact path='/' component={Login} />\n        <Route exact path={'/game'} component={Game}/>\n      </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'antd/dist/antd.css'\n\n\nReactDOM.render(\n\n\n    <App />\n\n ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}